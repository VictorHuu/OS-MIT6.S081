Answer #1:
a0~a7 We have to notice that const char* fmt 's pointer is stored on a0 at which a space for the string is memory allocated.
13 is the  3rd argument, thereby it's stored on a2.
Answer #2:
Bacause the compiler inline the function f and g,so it's struggling to find the exact call's entry.
24:	4635                	li	a2,13
  26:	45b1                	li	a1,12
Look at the above asm lines,we directly get the a2 and a1 which indicates that the a2 is pre-generated by inline mechanism.
Notice that the entry for the main is 1c which is a little bit odd,and the entry for the f is 0x0..e with instr. 14~1a the same as that of g function,therefore g is inlined in f and f is inlined in main.
Back to the original question,the call to function f is at 0x...0e,while function g  is at 14 with subsequent instrutions that belong to the main.
Answer#3:
0x628
Answer#4:
  30:	00000097          	auipc	ra,0x0
#     Imm		   # dest   #  opcode
# 0000 0000 0000 0000 0000 # 0000 1 # 001 0111
The auipc add the offset 0x0 which is left-shifted 12 bits to the pc which is 30whose result ra  is 0x30.
# Imm		#  rs1  # funct3 # rd1  # opcode
# 0101 1111 1000 # 00001# 000    # 00001# 110 0111
the immediate No. is 1528 or 0x5F8H .After Imm is added to the ra:0x30,ra becomes 0x628.
In a nutshell,It's 0x628 just after the jalr to printf in main.
Answer#5:
HE110 World
Answer#6:
x=3 y=5213
Because even if there is no third argument,but in printf the a2 register is assigned to 16(s0),so the 2nd variable y will be trapframe->a2 .In this scenario,it's 5213!
